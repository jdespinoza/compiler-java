/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Grammar.Documento;
import LexicalAnalyzer.Parser;
import LexicalAnalyzer.Yylex;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;


public class Main extends javax.swing.JFrame {

    private FileNameExtensionFilter filter = new FileNameExtensionFilter("C-0 Files [.c0]", "c0");
    private Map<String, String> listPaths;
    private String resConsole;
    private String resLexer;
    private String resTable;
    
    
    public Main() {
        initComponents();
        this.listPaths = new HashMap<String, String>();
        this.setLocationRelativeTo(null);
        _start();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jTabFiles = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTabsTerminal = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanelTerminalConsole = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanelTerminalFlex = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanelTerminalTable = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabFiles.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabFiles.setAutoscrolls(true);

        jTree1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTree1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jTree1);

        jTabsTerminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabsTerminalMouseClicked(evt);
            }
        });

        jScrollPane3.setViewportView(jPanelTerminalConsole);

        jTabsTerminal.addTab("Console", jScrollPane3);

        jScrollPane4.setViewportView(jPanelTerminalFlex);

        jTabsTerminal.addTab("Flex", jScrollPane4);

        jScrollPane5.setViewportView(jPanelTerminalTable);

        jTabsTerminal.addTab("Symbol Table", jScrollPane5);

        jButton1.setText("Compile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Open File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Save as");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Close File");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");
        jMenu2.add(jRadioButtonMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabFiles, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE))
            .addComponent(jTabsTerminal)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addComponent(jTabFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabsTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        //escoger un archivo para abrir
        JFileChooser openFile = (JFileChooser) evt.getSource();
        String command = evt.getActionCommand();
        if (command.equals(JFileChooser.APPROVE_SELECTION)){
            File newFile = openFile.getSelectedFile();
        }
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void manageFiles(File[] files){
        for (File file : files) {
            JTextPane textArea = new JTextPane();
            jTabFiles.addTab(file.getName(), textArea);
        }
    }
    
    private void _start(){
        JTextPane textArea = new JTextPane();
        jTabFiles.addTab("File*", textArea);
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser openFile = new JFileChooser();
        openFile.setFileFilter(filter);
        int option = openFile.showOpenDialog(this);
        if(option == JFileChooser.APPROVE_OPTION){
            
            File file = openFile.getSelectedFile();
            JTextPane textArea = new JTextPane();
            //JScrollPane jScrollPane = new JScrollPane();
            //jScrollPane.setAutoscrolls(true);
            
            //jScrollPane.setViewportView(textArea);

            try {
                FileReader read = new FileReader(file.getPath());
                BufferedReader b = new BufferedReader(read);
                String text = "";
                String aux;
                while((aux = b.readLine())!=null) {
                    text += aux + "\n";
                }
                b.close();
                textArea.setText(text);
                
                /* Se guarda el path del archivo abierto */
                listPaths.put(file.getName(), file.getPath());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            //jScrollPane.setViewportView(textArea);
            
            jTabFiles.addTab(file.getName(), textArea);
            //manageFiles(files);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
        try{
            JFileChooser file = new JFileChooser();
            file.showSaveDialog(this);
            File saveFile =file.getSelectedFile();
            if(saveFile !=null){
                int index = jTabFiles.getSelectedIndex();
                JTextPane textArea = (JTextPane) jTabFiles.getComponent(index);
                /** Si queremos que se guarde en algun formato lo definimos.
                 * Ejemplo: *.doc*/
                 FileWriter  save = new FileWriter(saveFile);
                 save.write(textArea.getText());
                 save.close();
                 jTabFiles.setTitleAt(index, saveFile.getName());
                 JOptionPane.showMessageDialog(null,
                      "El archivo se a guardado Exitosamente",
                          "Información",JOptionPane.INFORMATION_MESSAGE);
                 /* Se guarda el path del archivo guardado */
                 listPaths.put(saveFile.getName(), saveFile.getPath());
            }
        }
         catch(IOException ex){
          JOptionPane.showMessageDialog(null,
               "Su archivo no se ha guardado",
                  "Advertencia",JOptionPane.WARNING_MESSAGE);
         }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JTextPane textArea = new JTextPane();
        jTabFiles.addTab("File*", textArea);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try{
            int index = jTabFiles.getSelectedIndex();
            String name = jTabFiles.getTitleAt(index);
            //System.out.println(this.listPaths.get(name));
            /*Si no se guardo el archivo se perdera la informacion escrita*/
            if(listPaths.get(name) == null 
                    && !((JTextPane)jTabFiles.getComponentAt(index)).getText().isEmpty()){
                JOptionPane.showMessageDialog(null,
               "No ha guardado el texto",
                  "Advertencia",JOptionPane.WARNING_MESSAGE);
            }else{
                this.listPaths.remove(name);
                jTabFiles.remove(index);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,
               "Problemas para cerrar el archivo",
                  "Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void auxjButton1ActionPerformed(){
        //muestra el resultado en terminal
          jPanelTerminalConsole.setText(resConsole);
          jPanelTerminalFlex.setText(resLexer);
          jPanelTerminalTable.setText(resTable);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
        int index = jTabFiles.getSelectedIndex();
        String file = listPaths.get(jTabFiles.getTitleAt(index));    
        
        String reporte = "";
        FileInputStream f = new FileInputStream( file );
        Yylex lexer = new Yylex( f );
        Parser p = new Parser( lexer );
        p.setTable();// instancia la tabla
        p.parse();
        
        if( p.Exito() ) {
          reporte += "Parser sin problemas\n";
          Documento resultado = p.getDocumento();
          reporte += resultado.imprimirReporte();
          
          //copia el resultado para variables globales de Terminal
          this.resConsole = reporte;
          this.resLexer = lexer.printListLexer();
          this.resTable = p.table.printSymbolTable();
          //muestra en Terminal los resultados
          auxjButton1ActionPerformed();
        }else{
            reporte += "Problema con el parser";
            //copia el resultado para consola
            this.resConsole = reporte;
            this.resLexer = lexer.printListLexer();
            this.resTable = p.table.printSymbolTable();
            
            //muestra en Terminal los resultados
          auxjButton1ActionPerformed();
        }
      } catch (Exception ex) {
        ex.printStackTrace();
      } finally {
      }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jTabsTerminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabsTerminalMouseClicked
        /*int index = jTabsTerminal.getSelectedIndex();
        
        try{
            switch(index){
                case 0://Cuando selecciona Console
                    jPanelTerminalConsole.setText(resConsole);
                    break;
                case 1://cuando selecciona Lexer
                    jPanelTerminalFlex.setText(resLexer);
                    
                    break;
                case 2://cuando selecciona Table
                    jPanelTerminalTable.setText(resTable);
                    break;
                default:
                    break;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,
               "Ocurrio un error en el programa.\n"
                       + "Vuelva a intentar.",
                  "Advertencia",JOptionPane.WARNING_MESSAGE);
        } */       
    }//GEN-LAST:event_jTabsTerminalMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JTextPane jPanelTerminalConsole;
    private javax.swing.JTextPane jPanelTerminalFlex;
    private javax.swing.JTextPane jPanelTerminalTable;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabFiles;
    private javax.swing.JTabbedPane jTabsTerminal;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
